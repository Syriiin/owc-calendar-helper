import re
from datetime import datetime, timedelta, timezone

import httpx
import icalendar

# fetch wiki page
url = "https://raw.githubusercontent.com/ppy/osu-wiki/master/wiki/Tournaments/OWC/2024/en.md"
response = httpx.get(url)
response.raise_for_status()

# extract round name
round_pattern = r"^## Match schedule: (?P<round>[\w ]+)$"
round_match = re.search(round_pattern, response.text, re.MULTILINE)
if round_match is None:
    raise ValueError("Could not find round name")
round_name = round_match["round"]

# extract match data
match_pattern = r"^\| (?P<team1>[\w ]+) .*\|.*? (?P<team2>[\w ]+) \|.+iso=(?P<isotimestamp>[\dTZ:+-]+).+?(?:(?P<stream>https://twitch\.tv/\w+).*)?$"
matches = re.findall(match_pattern, response.text, re.MULTILINE)

# convert data
matches = [
    (
        team1,
        team2,
        datetime.fromisoformat(isotimestamp).replace(tzinfo=timezone.utc),
        stream,
    )
    for team1, team2, isotimestamp, stream in matches
]

# print matches
for team1, team2, isotimestamp, stream in matches:
    print(f"{isotimestamp} - {team1} vs {team2} ({stream})")

# create icalendar
cal = icalendar.Calendar()
cal.add("prodid", "-//https://github.com/Syriiin/owc-calendar-helper//OWC 2024//EN")
cal.add("version", "2.0")

for team1, team2, isotimestamp, stream in matches:
    event = icalendar.Event()
    event.add("summary", f"OWC: {team1} vs {team2}")
    event.add(
        "description",
        (
            f"OWC 2024 {round_name}\n"
            f"{team1} vs {team2}\n"
            f"{stream}\n\n"
            "Generated by https://github.com/Syriiin/owc-calendar-helper"
        ),
    )
    event.add("dtstart", isotimestamp)
    event.add("dtend", isotimestamp + timedelta(hours=1))
    cal.add_component(event)

# save icalendar
filename = f"calendars/2024/{round_name.replace(' ', '_')}.ics"
with open(filename, "wb") as f:
    f.write(cal.to_ical())

print(f"Calendar saved to {filename}")
